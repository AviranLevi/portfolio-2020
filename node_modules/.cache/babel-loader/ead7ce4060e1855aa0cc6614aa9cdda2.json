{"ast":null,"code":"var _jsxFileName = \"/home/aviranlevi/Documents/Projects/portfolio-2020/src/components/message-popup/MessagePopup.js\";\nimport React, { useContext, useState } from 'react';\nimport Button from '../button/Button';\nimport Title from '../title';\nimport Input from '../input/Input';\nimport { featuresIcons } from '../../constant/icons';\nimport { GlobalContext } from '../../context/GlobalState';\n\nconst MessagePopup = () => {\n  const {\n    state,\n    toggleMessageToast,\n    sendMessage\n  } = useContext(GlobalContext);\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    text: '',\n    maxLength: 300\n  });\n\n  const handleOnChange = e => {\n    const {\n      value\n    } = e.target;\n    const {\n      name\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const {\n    name,\n    email,\n    text,\n    maxLength\n  } = user;\n  const {\n    nameError,\n    emailError,\n    textError\n  } = state.errors;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-toast center-items fade-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-toast-wrapper center-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => toggleMessageToast(false),\n    className: \"close-toast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, featuresIcons.close), /*#__PURE__*/React.createElement(Title, {\n    className: \"message-title\",\n    text: \"Contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"massage-user-info center-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleOnChange,\n    name: \"name\",\n    title: \"Name\",\n    value: name,\n    error: nameError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleOnChange,\n    name: \"email\",\n    title: \"Email\",\n    value: email,\n    error: emailError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-wrapper center-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: handleOnChange,\n    maxLength: maxLength,\n    name: \"text\",\n    value: text,\n    placeholder: \"Message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-info center-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, textError && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }\n  }, \"*Message is required...\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"char-length\",\n    style: text.length === maxLength ? {\n      color: 'red'\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, text.length, \" / \", maxLength))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    action: () => sendMessage({ ...user\n    }),\n    text: \"Send\",\n    className: \"send-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default MessagePopup;","map":{"version":3,"sources":["/home/aviranlevi/Documents/Projects/portfolio-2020/src/components/message-popup/MessagePopup.js"],"names":["React","useContext","useState","Button","Title","Input","featuresIcons","GlobalContext","MessagePopup","state","toggleMessageToast","sendMessage","user","setUser","name","email","text","maxLength","handleOnChange","e","value","target","nameError","emailError","textError","errors","close","length","color"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport Button from '../button/Button'\nimport Title from '../title'\nimport Input from '../input/Input'\nimport { featuresIcons } from '../../constant/icons'\nimport { GlobalContext } from '../../context/GlobalState'\n\nconst MessagePopup = () => {\n  const { state, toggleMessageToast, sendMessage } = useContext(GlobalContext)\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    text: '',\n    maxLength: 300,\n  })\n\n  const handleOnChange = (e) => {\n    const { value } = e.target\n    const { name } = e.target\n    setUser({ ...user, [name]: value })\n  }\n\n  const { name, email, text, maxLength } = user\n  const { nameError, emailError, textError } = state.errors\n\n  return (\n    <div className=\"message-toast center-items fade-in\">\n      <div className=\"message-toast-wrapper center-items\">\n        <div onClick={() => toggleMessageToast(false)} className=\"close-toast\">\n          {featuresIcons.close}\n        </div>\n\n        <Title className=\"message-title\" text=\"Contact\" />\n        <div className=\"massage-user-info center-items\">\n          <Input onChange={handleOnChange} name=\"name\" title=\"Name\" value={name} error={nameError} />\n          <Input onChange={handleOnChange} name=\"email\" title=\"Email\" value={email} error={emailError} />\n        </div>\n\n        <div className=\"message-wrapper center-items\">\n          <textarea\n            onChange={handleOnChange}\n            maxLength={maxLength}\n            name=\"text\"\n            value={text}\n            placeholder=\"Message...\"\n          ></textarea>\n\n          <div className=\"text-info center-items\">\n            {textError && <span className=\"text-error\">*Message is required...</span>}\n            <span className=\"char-length\" style={text.length === maxLength ? { color: 'red' } : {}}>\n              {text.length} / {maxLength}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"message-btns\">\n          <Button action={() => sendMessage({ ...user })} text=\"Send\" className=\"send-btn\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MessagePopup\n"]},"metadata":{},"sourceType":"module"}
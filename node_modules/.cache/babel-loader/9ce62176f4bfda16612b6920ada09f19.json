{"ast":null,"code":"var _jsxFileName = \"/home/aviranlevi/Documents/Projects/portfolio-2020/src/components/projects/Projects.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../../context/GlobalState';\nimport ProjectProfilePic from '../../assets/images/projects.jpg';\nimport Title from '../../components/title';\nimport { featuresIcons } from '../../constant/icons';\nimport ProjectLink from './project-link';\nimport imageSourceLoaded from '../../utils/imageSourceLoaded';\nimport FadeLoader from 'react-spinners/FadeLoader';\n\nconst Projects = () => {\n  const [loadingImg, setLoadingImage] = useState(true);\n  const {\n    state,\n    toggleProjectsCard\n  } = useContext(GlobalContext);\n  const {\n    projects,\n    features\n  } = state;\n  const {\n    openProjectsCard,\n    noTechToDisplay\n  } = features;\n  const backgroundImageSrc = imageSourceLoaded(ProjectProfilePic);\n  useEffect(() => {\n    if (backgroundImageSrc) {\n      setLoadingImage(false);\n    }\n  }, [backgroundImageSrc]);\n  const openCardStyle = {\n    backgroundImage: `url(${backgroundImageSrc})`\n  };\n  return loadingImg ? /*#__PURE__*/React.createElement(FadeLoader, {\n    size: 100,\n    color: \"#f7fff740\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: `projects center-items fade-in ${openProjectsCard && 'expend'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => toggleProjectsCard(!openProjectsCard),\n    className: `open-card-btn ${openProjectsCard && 'open-card-btn-expend'}`,\n    style: openCardStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `card center-items ${openProjectsCard && 'expend-card'} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => toggleProjectsCard(false),\n    className: `close-card ${openProjectsCard && 'close-card-expend'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, featuresIcons.close), /*#__PURE__*/React.createElement(\"div\", {\n    className: `card-titles center-items ${openProjectsCard && 'expend-titles'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    className: \"card-title\",\n    text: \"My Projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `card-projects center-items ${openProjectsCard && 'expend-card-projects'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, projects.map((project, index) => /*#__PURE__*/React.createElement(ProjectLink, {\n    projcet: project,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `card-projects-tech center-items ${openProjectsCard && 'card-projects-tech-expend'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, projects.map(({\n    displayTech,\n    tech\n  }) => displayTech && tech.map((tech, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: `tech-icon fade-in`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: tech,\n    alt: tech + '-' + index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  })))), noTechToDisplay && /*#__PURE__*/React.createElement(Title, {\n    className: `hover-for-tech-title fade-in ${openProjectsCard && `hover-for-tech-title-expend`}`,\n    text: \"Hover for technologies...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Projects;","map":{"version":3,"sources":["/home/aviranlevi/Documents/Projects/portfolio-2020/src/components/projects/Projects.js"],"names":["React","useContext","useEffect","useState","GlobalContext","ProjectProfilePic","Title","featuresIcons","ProjectLink","imageSourceLoaded","FadeLoader","Projects","loadingImg","setLoadingImage","state","toggleProjectsCard","projects","features","openProjectsCard","noTechToDisplay","backgroundImageSrc","openCardStyle","backgroundImage","close","map","project","index","displayTech","tech"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport ProjectProfilePic from '../../assets/images/projects.jpg'\nimport Title from '../../components/title'\nimport { featuresIcons } from '../../constant/icons'\nimport ProjectLink from './project-link'\nimport imageSourceLoaded from '../../utils/imageSourceLoaded'\nimport FadeLoader from 'react-spinners/FadeLoader'\n\nconst Projects = () => {\n  const [loadingImg, setLoadingImage] = useState(true)\n\n  const { state, toggleProjectsCard } = useContext(GlobalContext)\n  const { projects, features } = state\n  const { openProjectsCard, noTechToDisplay } = features\n\n  const backgroundImageSrc = imageSourceLoaded(ProjectProfilePic)\n\n  useEffect(() => {\n    if (backgroundImageSrc) {\n      setLoadingImage(false)\n    }\n  }, [backgroundImageSrc])\n\n  const openCardStyle = {\n    backgroundImage: `url(${backgroundImageSrc})`,\n  }\n\n  return loadingImg ? (\n    <FadeLoader size={100} color=\"#f7fff740\" />\n  ) : (\n    <div className={`projects center-items fade-in ${openProjectsCard && 'expend'}`}>\n      <div\n        onClick={() => toggleProjectsCard(!openProjectsCard)}\n        className={`open-card-btn ${openProjectsCard && 'open-card-btn-expend'}`}\n        style={openCardStyle}\n      ></div>\n\n      <div className={`card center-items ${openProjectsCard && 'expend-card'} `}>\n        <div\n          onClick={() => toggleProjectsCard(false)}\n          className={`close-card ${openProjectsCard && 'close-card-expend'}`}\n        >\n          {featuresIcons.close}\n        </div>\n\n        <div className={`card-titles center-items ${openProjectsCard && 'expend-titles'}`}>\n          <Title className=\"card-title\" text=\"My Projects\" />\n        </div>\n\n        <div className={`card-projects center-items ${openProjectsCard && 'expend-card-projects'}`}>\n          {projects.map((project, index) => (\n            <ProjectLink projcet={project} index={index} />\n          ))}\n        </div>\n\n        <div className={`card-projects-tech center-items ${openProjectsCard && 'card-projects-tech-expend'}`}>\n          {projects.map(\n            ({ displayTech, tech }) =>\n              displayTech &&\n              tech.map((tech, index) => (\n                <div className={`tech-icon fade-in`}>\n                  <img src={tech} alt={tech + '-' + index} />\n                </div>\n              ))\n          )}\n\n          {noTechToDisplay && (\n            <Title\n              className={`hover-for-tech-title fade-in ${openProjectsCard && `hover-for-tech-title-expend`}`}\n              text=\"Hover for technologies...\"\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Projects\n"]},"metadata":{},"sourceType":"module"}
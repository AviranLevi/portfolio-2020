{"ast":null,"code":"export default ((state, action) => {\n  switch (action.type) {\n    case 'TOGGLE_PROFILE':\n      return { ...state,\n        features: { ...state.features,\n          openProfileCard: action.payload\n        }\n      };\n\n    case 'TOGGLE_PROJECTS':\n      return { ...state,\n        features: { ...state.features,\n          openProjectsCard: action.payload\n        }\n      };\n\n    case 'TOGGLE_MESSAGE_TOAST':\n      {\n        return { ...state,\n          features: { ...state.features,\n            openMessageToast: action.payload\n          }\n        };\n      }\n\n    case 'DISPLAY_TECH':\n      return { ...state,\n        projects: state.projects.map(project, index => index === action.payload.projectIndex ? { ...project,\n          displayTech: action.payload.displayTech\n        } : project)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/aviranlevi/Desktop/Projects/portfolio-2020/src/context/AppReducer.js"],"names":["state","action","type","features","openProfileCard","payload","openProjectsCard","openMessageToast","projects","map","project","index","projectIndex","displayTech"],"mappings":"AAAA,gBAAe,CAACA,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,QAAQ,EAAE,EAAE,GAAGH,KAAK,CAACG,QAAX;AAAqBC,UAAAA,eAAe,EAAEH,MAAM,CAACI;AAA7C;AAAtB,OAAP;;AAEF,SAAK,iBAAL;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYG,QAAAA,QAAQ,EAAE,EAAE,GAAGH,KAAK,CAACG,QAAX;AAAqBG,UAAAA,gBAAgB,EAAEL,MAAM,CAACI;AAA9C;AAAtB,OAAP;;AAEF,SAAK,sBAAL;AAA6B;AAC3B,eAAO,EAAE,GAAGL,KAAL;AAAYG,UAAAA,QAAQ,EAAE,EAAE,GAAGH,KAAK,CAACG,QAAX;AAAqBI,YAAAA,gBAAgB,EAAEN,MAAM,CAACI;AAA9C;AAAtB,SAAP;AACD;;AAED,SAAK,cAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELQ,QAAAA,QAAQ,EAAER,KAAK,CAACQ,QAAN,CAAeC,GAAf,CAAmBC,OAAnB,EAA6BC,KAAD,IACpCA,KAAK,KAAKV,MAAM,CAACI,OAAP,CAAeO,YAAzB,GAAwC,EAAE,GAAGF,OAAL;AAAcG,UAAAA,WAAW,EAAEZ,MAAM,CAACI,OAAP,CAAeQ;AAA1C,SAAxC,GAAkGH,OAD1F;AAFL,OAAP;;AAOF;AACE,aAAOV,KAAP;AApBJ;AAsBD,CAvBD","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case 'TOGGLE_PROFILE':\n      return { ...state, features: { ...state.features, openProfileCard: action.payload } };\n\n    case 'TOGGLE_PROJECTS':\n      return { ...state, features: { ...state.features, openProjectsCard: action.payload } };\n\n    case 'TOGGLE_MESSAGE_TOAST': {\n      return { ...state, features: { ...state.features, openMessageToast: action.payload } };\n    }\n\n    case 'DISPLAY_TECH':\n      return {\n        ...state,\n        projects: state.projects.map(project, (index) =>\n          index === action.payload.projectIndex ? { ...project, displayTech: action.payload.displayTech } : project\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}